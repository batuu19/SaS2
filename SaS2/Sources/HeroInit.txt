function initsystem()
{
   _global.heroDNA = "Nameless,1,3,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,125,1,0,2500,1,0,0,0,1,1,1,1,1,1,1,0,1,0,0,0,0,0,5,1";
   if(characterDNA.substring(0,1) == " ")
   {
      characterDNA = _global.heroDNA;
   }
   if(_global.oldname == undefined)
   {
      _global.oldname = "Nameless";
   }
   delete game;
   delete game.hero;
   delete game.villain;
   game = new Object();
   game.hero = new Object();
   game.villain = new Object();
   _global.colormax = 21;
   _global.skincolormax = 18;
   _global.facehairstylemax = 24;
   _global.hairstylemax = 40;
   _global.featuresmax = 11;
   _global.helmetmax = 56;
   _global.greavesmax = 22;
   _global.breastplatemax = 223;
   _global.shieldmax = 22;
   _global.capemax = 12;
   _root.attachMovie("hero","hero",100000);
   _root.hero._visible = false;
   _root.hero._x = 370;
   _root.hero._y = 390;
   eyesexpression = new Array("normal","normal","up","down","left","right","scared","happy","angry","sad","pain","blink");
   mouthexpression = new Array("normal","normal","sad","happy","laugh","scared","angry","drunk","rude","smirk","thoughful","cheesy");
   initwarrior();
   initcharacter(game.hero,_root.hero,game.hero.charDNA);
   if(_root.boss == true)
   {
      _root.gotoAndPlay("createboss");
   }
   _root.tooltips("Here you need to create a gladiator to fight in the arena. You can customise your Gladiator\'s appearance and edit their strengths and weaknesses by clicking the buttons on the left.",1000,400,50);
   _root.hero._visible = true;
}
function initwarrior()
{
   if(_root.game.hero.charDNA == null || _root.game.hero.charDNA == undefined)
   {
      _global.time_of_day = 25;
      _global.day = _root.game.hero.days_in_arena;
      if(_global.timerinit == null)
      {
         _global.cloudframe = 1 + random(16);
         setInterval(day_night_cycle,1500);
         _global.timerinit = true;
      }
      if(_global.backupDNA != null)
      {
         _root.game.hero.charDNA = _global.backupDNA;
         _root.game.hero.character_name = _global.oldname;
         _root.entername = _global.oldname;
         _root.game.hero.statpoints = 0;
      }
      else
      {
         _root.game.hero.statpoints = 9;
         _root.game.hero.charDNA = _global.heroDNA;
      }
   }
   help = "Welcome to character creation. It\'s time to create the ultimate gladiator! Rollover each section for help.";
}
function day_night_cycle()
{
   if(_global.battle_started != true)
   {
      if(_global.time_of_day < 200 && _global.special_event_happening != true)
      {
         _global.time_of_day++;
      }
      _root.townsquare.gotoAndStop(_global.time_of_day);
      _root.sky.gotoAndStop(_global.time_of_day);
      _root.village_bg.gotoAndStop(_global.time_of_day);
      _root.sky.moon.gotoAndStop(_global.day);
      _root.sky.cloud_patterns.gotoAndStop(_global.cloudframe);
   }
   if(_root.sky.cloud_patterns._currentframe == 3 || _root.sky.cloud_patterns._currentframe == 4)
   {
      chance_of_rain = 1 + random(900);
      if(chance_of_rain < 10)
      {
         _global.rain_chance = true;
      }
      else
      {
         _global.rain_chance = false;
      }
   }
   else
   {
      _global.rain_chance = false;
   }
   if(_global.battle_started == true && (_global.current_arena == 1 || _global.current_arena == 6))
   {
      _global.rain_chance = false;
   }
}
function build_body_buttons()
{
   skincolorUp.onRelease = function()
   {
      _root.clicksound.start();
      game.hero.skincolor++;
      if(game.hero.skincolor > _global.skincolormax)
      {
         game.hero.skincolor = 1;
      }
      if(game.hero.skincolor < 1)
      {
         game.hero.skincolor = _global.skincolormax;
      }
      begincolouring("_root.hero",game.hero.skincolor,"head.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"Lupperarm.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"Rupperarm.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"Llowerarm.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"Rlowerarm.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"Lupperleg.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"Rupperleg.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"Llowerleg.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"Rlowerleg.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"torso.bareskin");
      updatecast();
   };
   skincolorDown.onRelease = function()
   {
      _root.clicksound.start();
      game.hero.skincolor--;
      if(game.hero.skincolor > _global.skincolormax)
      {
         game.hero.skincolor = 1;
      }
      if(game.hero.skincolor < 1)
      {
         game.hero.skincolor = _global.skincolormax;
      }
      begincolouring("_root.hero",game.hero.skincolor,"head.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"Lupperarm.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"Rupperarm.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"Llowerarm.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"Rlowerarm.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"Lupperleg.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"Rupperleg.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"Llowerleg.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"Rlowerleg.bareskin");
      begincolouring("_root.hero",game.hero.skincolor,"torso.bareskin");
      updatecast();
   };
   haircolorDown.onRelease = function()
   {
      _root.clicksound.start();
      game.hero.haircolor--;
      if(game.hero.haircolor > _global.colormax)
      {
         game.hero.haircolor = 1;
      }
      if(game.hero.haircolor < 1)
      {
         game.hero.haircolor = _global.colormax;
      }
      updatecast();
   };
   haircolorUp.onRelease = function()
   {
      _root.clicksound.start();
      game.hero.haircolor++;
      if(game.hero.haircolor > _global.colormax)
      {
         game.hero.haircolor = 1;
      }
      if(game.hero.haircolor < 1)
      {
         game.hero.haircolor = _global.colormax;
      }
      updatecast();
   };
   facehairUp.onRelease = function()
   {
      _root.clicksound.start();
      game.hero.facehairstyle++;
      if(game.hero.facehairstyle > _global.facehairstylemax)
      {
         game.hero.facehairstyle = 1;
      }
      if(game.hero.facehairstyle < 1)
      {
         game.hero.facehairstyle = _global.facehairstylemax;
      }
      updatecast();
   };
   facehairDown.onRelease = function()
   {
      _root.clicksound.start();
      game.hero.facehairstyle--;
      if(game.hero.facehairstyle > _global.facehairstylemax)
      {
         game.hero.facehairstyle = 1;
      }
      if(game.hero.facehairstyle < 1)
      {
         game.hero.facehairstyle = _global.facehairstylemax;
      }
      updatecast();
   };
   hairstyleUp.onRelease = function()
   {
      _root.clicksound.start();
      game.hero.hairstyle++;
      if(game.hero.hairstyle > _global.hairstylemax)
      {
         game.hero.hairstyle = 1;
      }
      if(game.hero.hairstyle < 1)
      {
         game.hero.hairstyle = _global.hairstylemax;
      }
      updatecast();
   };
   hairstyleDown.onRelease = function()
   {
      _root.clicksound.start();
      game.hero.hairstyle--;
      if(game.hero.hairstyle > _global.hairstylemax)
      {
         game.hero.hairstyle = 1;
      }
      if(game.hero.hairstyle < 1)
      {
         game.hero.hairstyle = _global.hairstylemax;
      }
      updatecast();
   };
   shoulderguardDown.onRelease = function()
   {
      game.hero.shoulderguard--;
      updatecast();
   };
   shoulderguardUp.onRelease = function()
   {
      game.hero.shoulderguard++;
      updatecast();
   };
   gauntletDown.onRelease = function()
   {
      game.hero.gauntlet--;
      updatecast();
   };
   gauntletUp.onRelease = function()
   {
      game.hero.gauntlet++;
      updatecast();
   };
   bootDown.onRelease = function()
   {
      game.hero.boot--;
      updatecast();
   };
   bootUp.onRelease = function()
   {
      game.hero.boot++;
      updatecast();
   };
   breastplateUp.onRelease = function()
   {
      game.hero.breastplate++;
      updatecast();
   };
   breastplateDown.onRelease = function()
   {
      game.hero.breastplate--;
      updatecast();
   };
   helmetDown.onRelease = function()
   {
      game.hero.helmet--;
      trace(game.hero.helmet);
      updatecast();
   };
   helmetUp.onRelease = function()
   {
      game.hero.helmet++;
      trace(game.hero.helmet);
      updatecast();
   };
   thighguardDown.onRelease = function()
   {
      game.hero.greaves--;
      updatecast();
   };
   thighguardUp.onRelease = function()
   {
      game.hero.greaves++;
      updatecast();
   };
   shinguardDown.onRelease = function()
   {
      game.hero.shinguard--;
      updatecast();
   };
   shinguardUp.onRelease = function()
   {
      game.hero.shinguard++;
      updatecast();
   };
   weaponDown.onRelease = function()
   {
      game.hero.weapon--;
      updatecast();
   };
   weaponUp.onRelease = function()
   {
      game.hero.weapon++;
      updatecast();
   };
   secondary_weaponDown.onRelease = function()
   {
      game.hero.secondary_weapon--;
      updatecast();
   };
   secondary_weaponUp.onRelease = function()
   {
      game.hero.secondary_weapon++;
      updatecast();
   };
   shieldDown.onRelease = function()
   {
      game.hero.shield--;
      updatecast();
   };
   shieldUp.onRelease = function()
   {
      game.hero.shield++;
      updatecast();
   };
}
